@import '~/../src/styles/partials/_variables.scss';

.flexWrapper {
    @extend .section;
    display: flex;
}

.nav {
    display: flex;
    justify-content: space-between;
    align-items: center;

    div:last-of-type {
        order: 1;
    }

    @media screen and (max-width: 520px) {
        flex-wrap: wrap;
        h3 {
            width: 100%;
            order: 2;
        }
    }
}

.showcase {
    padding: 0.5rem;
    margin-bottom: 1rem;
    border-radius: $border_radius;
    display: flex;
    align-items: center;
    background-color: $blue_light;

    @media screen and (max-width: 520px) {
        justify-content: center;
        flex-wrap: wrap;
        padding-bottom: 1.5rem;
    }
}

.info {
    @extend .flexWrapper;
    flex-wrap: wrap;
    align-items: flex-start;
    justify-content: space-around;
    background-color: $background_light;
}

.flavorText {
    margin: 0 2rem;
    font-style: italic;
    position: relative;
    padding: 1rem 0.5rem;
    border-radius: $border_radius;
    background-color: rgba($background_light, 0.8);

    &::after {
        content: 'Pokedex';
        display: block;
        position: absolute;
        right: 20%;
        font-size: 0.75rem;
    }
}

.dataSection {
    width: 50%;
    align-self: stretch;
    flex-grow: 1;
    min-width: 16rem;

    &:nth-of-type(1) {
        margin-bottom: 2rem;
    }

    h5 {
        text-align: center;
    }
}

@each $type in $types {
    .#{$type} {
        @extend .showcase;
        background-color: map-get($typeColors, $type);
    }
}

@each $type in $types {
    @each $secondary in $types {
        @if ($type != $secondary) {
            .#{$type}#{$secondary} {
                @extend .showcase;
                background: linear-gradient(map-get($typeColors, $type) 50%, map-get($typeColors, $secondary) 50%);
            }
        }
    }
}
